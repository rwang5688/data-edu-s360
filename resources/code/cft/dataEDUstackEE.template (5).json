{
  "Parameters": {
    "EETeamID": {
      "Type": "String",
      "Default": "12938128947124",
      "Description": "Unique Event Engine per-Team GUID."
    },
  },
  "Resources": {
    "dataeduDMSVPCRole12E65ABC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/service-role/AmazonDMSVPCManagementRole"
        ],
        "RoleName": "dms-vpc-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSVPCRole/Resource"
      }
    },
    "dataeduDMSSourceRole55726A42": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::Join": [
                    "",
                    [
                      "dms.",
                      {
                        "Ref": "AWS::Region"
                      },
                      ".amazonaws.com"
                    ]
                  ]
                }
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "dataedu-dms-source-execution-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSSourceRole/Resource"
      }
    },
    "dataeduDMSSourceRoleDefaultPolicy4D64F344": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dataeduKMS6B3AB969",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "dataEDURDSSecretA0904793"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataeduDMSSourceRoleDefaultPolicy4D64F344",
        "Roles": [
          {
            "Ref": "dataeduDMSSourceRole55726A42"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSSourceRole/DefaultPolicy/Resource"
      }
    },
    "dataeduDMSTargetRoleFF1FC64E": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "dms.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "dataedu-dms-target-execution-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSTargetRole/Resource"
      }
    },
    "dataeduDMSTargetRoleDefaultPolicy58C5A871": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:Abort*"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "dataeduRawBucket945ADDC3",
                    "Arn"
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      {
                        "Fn::GetAtt": [
                          "dataeduRawBucket945ADDC3",
                          "Arn"
                        ]
                      },
                      "/*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "kms:Decrypt",
                "kms:DescribeKey",
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dataeduKMS6B3AB969",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataeduDMSTargetRoleDefaultPolicy58C5A871",
        "Roles": [
          {
            "Ref": "dataeduDMSTargetRoleFF1FC64E"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSTargetRole/DefaultPolicy/Resource"
      }
    },
    "dataeduSISImportRole61DAD9FC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "dataedu-sis-import-lambda-execution-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduSISImportRole/Resource"
      }
    },
    "dataeduSISImportRoleDefaultPolicy7294368E": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "kms:Decrypt",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dataeduKMS6B3AB969",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "secretsmanager:GetSecretValue",
                "secretsmanager:DescribeSecret"
              ],
              "Effect": "Allow",
              "Resource": {
                "Ref": "dataEDURDSSecretA0904793"
              }
            },
            {
              "Action": [
                "ec2:DescribeNetworkInterfaces",
                "ec2:CreateNetworkInterface",
                "ec2:DeleteNetworkInterface",
                "ec2:DescribeInstances",
                "ec2:AttachNetworkInterface"
              ],
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:InvokeAsync"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:lambda:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:s360-*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataeduSISImportRoleDefaultPolicy7294368E",
        "Roles": [
          {
            "Ref": "dataeduSISImportRole61DAD9FC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduSISImportRole/DefaultPolicy/Resource"
      }
    },
    "dataeduLMSS3FetchRole16948341": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "dataedu-fetch-s3-lambda-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSS3FetchRole/Resource"
      }
    },
    "dataeduLMSS3FetchRoleDefaultPolicyE0083EF5": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "dataeduRawBucket945ADDC3",
                  "Arn"
                ]
              }
            },
            {
              "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduRawBucket945ADDC3",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataeduLMSS3FetchRoleDefaultPolicyE0083EF5",
        "Roles": [
          {
            "Ref": "dataeduLMSS3FetchRole16948341"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSS3FetchRole/DefaultPolicy/Resource"
      }
    },
    "dataeduLMSAPIFetchRoleE153F61C": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "RoleName": "dataedu-fetch-s3-data-role"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSAPIFetchRole/Resource"
      }
    },
    "dataeduLMSAPIFetchRoleDefaultPolicy716C3933": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "ssm:PutParameter",
                "ssm:GetParameter"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":ssm:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":parameter",
                    {
                      "Ref": "dataeduSSMParam6F974C31"
                    }
                  ]
                ]
              }
            },
            {
              "Action": [
                "lambda:InvokeFunction",
                "lambda:InvokeAsync"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:lambda:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":function:s360-*"
                  ]
                ]
              }
            },
            {
              "Action": "events:DisableRule",
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:events:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":rule/lmsapi-sync-schedule-halfhourly"
                  ]
                ]
              }
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "dataeduLMSAPIFetchRoleDefaultPolicy716C3933",
        "Roles": [
          {
            "Ref": "dataeduLMSAPIFetchRoleE153F61C"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSAPIFetchRole/DefaultPolicy/Resource"
      }
    },
    "dataeduKMS6B3AB969": {
      "Type": "AWS::KMS::Key",
      "Properties": {
        "KeyPolicy": {
          "Statement": [
            {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": {
                "AWS": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:iam::",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":root"
                    ]
                  ]
                }
              },
              "Resource": "*",
              "Sid": "Enable IAM User Permissions"
            }
          ],
          "Version": "2012-10-17",
          "Id": "key-consolepolicy-3"
        },
        "Description": "KMS key to encrypt objects in the dataEDU S3 buckets.",
        "EnableKeyRotation": false,
        "PendingWindowInDays": 7
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduKMS/Resource"
      }
    },
    "dataeduKMSAlias357469DC": {
      "Type": "AWS::KMS::Alias",
      "Properties": {
        "AliasName": "alias/dataedu-key",
        "TargetKeyId": {
          "Fn::GetAtt": [
            "dataeduKMS6B3AB969",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduKMS/Alias/Resource"
      }
    },
    "dataeduRawBucket945ADDC3": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "dataeduKMS6B3AB969",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "dataedu-raw-",
              {
                "Ref": "EETeamID"
              }
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRawBucket/Resource"
      }
    },
    "dataeduRawBucketPolicyEDC69BFC": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "dataeduRawBucket945ADDC3"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduRawBucket945ADDC3",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Fn::GetAtt": [
                      "dataeduKMS6B3AB969",
                      "Arn"
                    ]
                  }
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduRawBucket945ADDC3",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRawBucket/Policy/Resource"
      }
    },
    "dataeduCuratedBucket2AB663B1": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "dataeduKMS6B3AB969",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "dataedu-curated-",
              {
                "Ref": "EETeamID"
              }
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduCuratedBucket/Resource"
      }
    },
    "dataeduCuratedBucketPolicy25B1E0AF": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "dataeduCuratedBucket2AB663B1"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduCuratedBucket2AB663B1",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Ref": "dataeduKMS6B3AB969"
                  }
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduCuratedBucket2AB663B1",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduCuratedBucket/Policy/Resource"
      }
    },
    "dataeduResultsBucketBC9A3373": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "KMSMasterKeyID": {
                  "Fn::GetAtt": [
                    "dataeduKMS6B3AB969",
                    "Arn"
                  ]
                },
                "SSEAlgorithm": "aws:kms"
              }
            }
          ]
        },
        "BucketName": {
          "Fn::Join": [
            "",
            [
              "dataedu-results-",
              {
                "Ref": "EETeamID"
              }
            ]
          ]
        },
        "PublicAccessBlockConfiguration": {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true
        },
        "VersioningConfiguration": {
          "Status": "Enabled"
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduResultsBucket/Resource"
      }
    },
    "dataeduResultsBucketPolicy7149F8C9": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "dataeduResultsBucketBC9A3373"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringEquals": {
                  "s3:x-amz-server-side-encryption": "AES256"
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduResultsBucketBC9A3373",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            },
            {
              "Action": "s3:PutObject",
              "Condition": {
                "StringNotLikeIfExists": {
                  "s3:x-amz-server-side-encryption-aws-kms-key-id": {
                    "Ref": "dataeduKMS6B3AB969"
                  }
                }
              },
              "Effect": "Deny",
              "Principal": {
                "AWS": "*"
              },
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    {
                      "Fn::GetAtt": [
                        "dataeduResultsBucketBC9A3373",
                        "Arn"
                      ]
                    },
                    "/*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduResultsBucket/Policy/Resource"
      }
    },
    "dataeduVPCF752A41B": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/Resource"
      }
    },
    "dataeduVPCs360publicSubnet1Subnet97F726AF": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.0.0/24",
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "s360-public-"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/Subnet"
      }
    },
    "dataeduVPCs360publicSubnet1RouteTableACD97CEF": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/RouteTable"
      }
    },
    "dataeduVPCs360publicSubnet1RouteTableAssociation9B8F5F55": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360publicSubnet1RouteTableACD97CEF"
        },
        "SubnetId": {
          "Ref": "dataeduVPCs360publicSubnet1Subnet97F726AF"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/RouteTableAssociation"
      }
    },
    "dataeduVPCs360publicSubnet1DefaultRoute03CEAB01": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360publicSubnet1RouteTableACD97CEF"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "dataeduVPCIGW1F5E0B85"
        }
      },
      "DependsOn": [
        "dataeduVPCVPCGW8A53B470"
      ],
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/DefaultRoute"
      }
    },
    "dataeduVPCs360publicSubnet1EIPF5A45EA7": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/EIP"
      }
    },
    "dataeduVPCs360publicSubnet1NATGateway0A9F0B70": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "dataeduVPCs360publicSubnet1Subnet97F726AF"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "dataeduVPCs360publicSubnet1EIPF5A45EA7",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet1/NATGateway"
      }
    },
    "dataeduVPCs360publicSubnet2SubnetF3693D59": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.1.0/24",
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": true,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "s360-public-"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Public"
          },
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/Subnet"
      }
    },
    "dataeduVPCs360publicSubnet2RouteTableD55D517F": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/RouteTable"
      }
    },
    "dataeduVPCs360publicSubnet2RouteTableAssociation70199C90": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360publicSubnet2RouteTableD55D517F"
        },
        "SubnetId": {
          "Ref": "dataeduVPCs360publicSubnet2SubnetF3693D59"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/RouteTableAssociation"
      }
    },
    "dataeduVPCs360publicSubnet2DefaultRoute512EC40F": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360publicSubnet2RouteTableD55D517F"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "dataeduVPCIGW1F5E0B85"
        }
      },
      "DependsOn": [
        "dataeduVPCVPCGW8A53B470"
      ],
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/DefaultRoute"
      }
    },
    "dataeduVPCs360publicSubnet2EIP2C50AEB6": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/EIP"
      }
    },
    "dataeduVPCs360publicSubnet2NATGatewayE84ACF10": {
      "Type": "AWS::EC2::NatGateway",
      "Properties": {
        "SubnetId": {
          "Ref": "dataeduVPCs360publicSubnet2SubnetF3693D59"
        },
        "AllocationId": {
          "Fn::GetAtt": [
            "dataeduVPCs360publicSubnet2EIP2C50AEB6",
            "AllocationId"
          ]
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-public-Subnet2/NATGateway"
      }
    },
    "dataeduVPCs360privateSubnet1Subnet3D3E93FE": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.2.0/24",
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            0,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "s360-private-"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1/Subnet"
      }
    },
    "dataeduVPCs360privateSubnet1RouteTable1B765D81": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1/RouteTable"
      }
    },
    "dataeduVPCs360privateSubnet1RouteTableAssociation4790DD8E": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360privateSubnet1RouteTable1B765D81"
        },
        "SubnetId": {
          "Ref": "dataeduVPCs360privateSubnet1Subnet3D3E93FE"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1/RouteTableAssociation"
      }
    },
    "dataeduVPCs360privateSubnet1DefaultRoute039F6079": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360privateSubnet1RouteTable1B765D81"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "dataeduVPCs360publicSubnet1NATGateway0A9F0B70"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet1/DefaultRoute"
      }
    },
    "dataeduVPCs360privateSubnet2SubnetC1604F60": {
      "Type": "AWS::EC2::Subnet",
      "Properties": {
        "CidrBlock": "10.0.3.0/24",
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "AvailabilityZone": {
          "Fn::Select": [
            1,
            {
              "Fn::GetAZs": ""
            }
          ]
        },
        "MapPublicIpOnLaunch": false,
        "Tags": [
          {
            "Key": "aws-cdk:subnet-name",
            "Value": "s360-private-"
          },
          {
            "Key": "aws-cdk:subnet-type",
            "Value": "Private"
          },
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2/Subnet"
      }
    },
    "dataeduVPCs360privateSubnet2RouteTable065CE119": {
      "Type": "AWS::EC2::RouteTable",
      "Properties": {
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2/RouteTable"
      }
    },
    "dataeduVPCs360privateSubnet2RouteTableAssociation624AF894": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360privateSubnet2RouteTable065CE119"
        },
        "SubnetId": {
          "Ref": "dataeduVPCs360privateSubnet2SubnetC1604F60"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2/RouteTableAssociation"
      }
    },
    "dataeduVPCs360privateSubnet2DefaultRoute2E275823": {
      "Type": "AWS::EC2::Route",
      "Properties": {
        "RouteTableId": {
          "Ref": "dataeduVPCs360privateSubnet2RouteTable065CE119"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "dataeduVPCs360publicSubnet2NATGatewayE84ACF10"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/s360-private-Subnet2/DefaultRoute"
      }
    },
    "dataeduVPCIGW1F5E0B85": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": "dataEDUstackEE/dataeduVPC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/IGW"
      }
    },
    "dataeduVPCVPCGW8A53B470": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "Properties": {
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        },
        "InternetGatewayId": {
          "Ref": "dataeduVPCIGW1F5E0B85"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduVPC/VPCGW"
      }
    },
    "dataEDURDSSecretA0904793": {
      "Type": "AWS::SecretsManager::Secret",
      "Properties": {
        "GenerateSecretString": {
          "ExcludePunctuation": true,
          "GenerateStringKey": "password",
          "SecretStringTemplate": "{\"username\":\"admin\"}"
        },
        "Name": "dataedu-rds-secret"
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataEDURDSSecret/Resource"
      }
    },
    "dataEDURDSSecretAttachment1F15340A": {
      "Type": "AWS::SecretsManager::SecretTargetAttachment",
      "Properties": {
        "SecretId": {
          "Ref": "dataEDURDSSecretA0904793"
        },
        "TargetId": {
          "Ref": "dataeduRDSInstance2BB1EFE2"
        },
        "TargetType": "AWS::RDS::DBInstance"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataEDURDSSecret/Attachment/Resource"
      }
    },
    "dataeduRDSsg43029FA3": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DataEDU RDS Instance security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRDSsg/Resource"
      }
    },
    "dataeduRDSsgfromdataEDUstackEEdataeduDMSsg666009823306E1BF717F": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "DMS to RDS (MySQL)",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "dataeduRDSsg43029FA3",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "dataeduDMSsg5B5997DA",
            "GroupId"
          ]
        },
        "ToPort": 3306
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRDSsg/from dataEDUstackEEdataeduDMSsg66600982:3306"
      }
    },
    "dataeduRDSsgfromdataEDUstackEEdataeduLambdasgD7967E4133063FE64A8A": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "Properties": {
        "IpProtocol": "tcp",
        "Description": "SIS Import Lambda to RDS (MySQL)",
        "FromPort": 3306,
        "GroupId": {
          "Fn::GetAtt": [
            "dataeduRDSsg43029FA3",
            "GroupId"
          ]
        },
        "SourceSecurityGroupId": {
          "Fn::GetAtt": [
            "dataeduLambdasg8559F486",
            "GroupId"
          ]
        },
        "ToPort": 3306
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRDSsg/from dataEDUstackEEdataeduLambdasgD7967E41:3306"
      }
    },
    "dataeduDMSsg5B5997DA": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DataEDU DMS Instance security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSsg/Resource"
      }
    },
    "dataeduLambdasg8559F486": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "DataEDU SIS Import Lambda Function security group",
        "SecurityGroupEgress": [
          {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1"
          }
        ],
        "VpcId": {
          "Ref": "dataeduVPCF752A41B"
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLambdasg/Resource"
      }
    },
    "dataeduRDSInstanceSubnetGroupEBC78F3D": {
      "Type": "AWS::RDS::DBSubnetGroup",
      "Properties": {
        "DBSubnetGroupDescription": "Subnet group for dataeduRDSInstance database",
        "SubnetIds": [
          {
            "Ref": "dataeduVPCs360privateSubnet1Subnet3D3E93FE"
          },
          {
            "Ref": "dataeduVPCs360privateSubnet2SubnetC1604F60"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRDSInstance/SubnetGroup/Default"
      }
    },
    "dataeduRDSInstance2BB1EFE2": {
      "Type": "AWS::RDS::DBInstance",
      "Properties": {
        "DBInstanceClass": "db.m5.large",
        "AllocatedStorage": "100",
        "CopyTagsToSnapshot": true,
        "DBSubnetGroupName": {
          "Ref": "dataeduRDSInstanceSubnetGroupEBC78F3D"
        },
        "Engine": "mysql",
        "EngineVersion": "8.0.26",
        "MasterUsername": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "dataEDURDSSecretA0904793"
              },
              ":SecretString:username::}}"
            ]
          ]
        },
        "MasterUserPassword": {
          "Fn::Join": [
            "",
            [
              "{{resolve:secretsmanager:",
              {
                "Ref": "dataEDURDSSecretA0904793"
              },
              ":SecretString:password::}}"
            ]
          ]
        },
        "PubliclyAccessible": false,
        "StorageType": "gp2",
        "VPCSecurityGroups": [
          {
            "Fn::GetAtt": [
              "dataeduRDSsg43029FA3",
              "GroupId"
            ]
          }
        ]
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduRDSInstance/Resource"
      }
    },
    "dataeduDMSSubnetGroup": {
      "Type": "AWS::DMS::ReplicationSubnetGroup",
      "Properties": {
        "ReplicationSubnetGroupDescription": "dataedu-replication-subnet-group",
        "SubnetIds": [
          {
            "Ref": "dataeduVPCs360privateSubnet1Subnet3D3E93FE"
          },
          {
            "Ref": "dataeduVPCs360privateSubnet2SubnetC1604F60"
          }
        ],
        "ReplicationSubnetGroupIdentifier": "dataedu-replication-subnet-group"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSSubnetGroup"
      }
    },
    "dataeduDMSInstance": {
      "Type": "AWS::DMS::ReplicationInstance",
      "Properties": {
        "ReplicationInstanceClass": "dms.t2.small",
        "ReplicationSubnetGroupIdentifier": {
          "Ref": "dataeduDMSSubnetGroup"
        },
        "VpcSecurityGroupIds": [
          {
            "Fn::GetAtt": [
              "dataeduDMSsg5B5997DA",
              "GroupId"
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSInstance"
      }
    },
    "dataeduDMSSourceEndpoint": {
      "Type": "AWS::DMS::Endpoint",
      "Properties": {
        "EndpointType": "source",
        "EngineName": "mysql",
        "MySqlSettings": {
          "SecretsManagerAccessRoleArn": {
            "Fn::GetAtt": [
              "dataeduDMSSourceRole55726A42",
              "Arn"
            ]
          },
          "SecretsManagerSecretId": {
            "Ref": "dataEDURDSSecretA0904793"
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSSourceEndpoint"
      }
    },
    "dataeduDMSTargetEndpoint": {
      "Type": "AWS::DMS::Endpoint",
      "Properties": {
        "EndpointType": "target",
        "EngineName": "s3",
        "S3Settings": {
          "BucketFolder": "sisdb",
          "BucketName": {
            "Ref": "dataeduRawBucket945ADDC3"
          },
          "ServiceAccessRoleArn": {
            "Fn::GetAtt": [
              "dataeduDMSTargetRoleFF1FC64E",
              "Arn"
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduDMSTargetEndpoint"
      }
    },
    "dataeduSISLambdaLayer2B86FA17": {
      "Type": "AWS::Lambda::LayerVersion",
      "Properties": {
        "Content": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "ee-assets-prod-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "modules/f7ff818991a14cfb80e2617aad4431d1/v1/lambda/mysql_boto3_layer.zip"
        },
        "CompatibleRuntimes": [
          "python3.6",
          "python3.7",
          "python3.8"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduSISLambdaLayer/Resource"
      }
    },
    "dataeduSISLambdaFunction754154E0": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "ee-assets-prod-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "modules/f7ff818991a14cfb80e2617aad4431d1/v1/lambda/s360-load-sisdb.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "dataeduSISImportRole61DAD9FC",
            "Arn"
          ]
        },
        "Environment": {
          "Variables": {
            "secret_name": {
              "Fn::Join": [
                "-",
                [
                  {
                    "Fn::Select": [
                      0,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "dataEDURDSSecretA0904793"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      1,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "dataEDURDSSecretA0904793"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  },
                  {
                    "Fn::Select": [
                      2,
                      {
                        "Fn::Split": [
                          "-",
                          {
                            "Fn::Select": [
                              6,
                              {
                                "Fn::Split": [
                                  ":",
                                  {
                                    "Ref": "dataEDURDSSecretA0904793"
                                  }
                                ]
                              }
                            ]
                          }
                        ]
                      }
                    ]
                  }
                ]
              ]
            },
            "region_name": {
              "Ref": "AWS::Region"
            }
          }
        },
        "FunctionName": "dataedu-load-sisdb",
        "Handler": "lambda_function.lambda_handler",
        "Layers": [
          {
            "Ref": "dataeduSISLambdaLayer2B86FA17"
          }
        ],
        "MemorySize": 512,
        "Runtime": "python3.8",
        "Timeout": 900,
        "VpcConfig": {
          "SecurityGroupIds": [
            {
              "Fn::GetAtt": [
                "dataeduLambdasg8559F486",
                "GroupId"
              ]
            }
          ],
          "SubnetIds": [
            {
              "Ref": "dataeduVPCs360privateSubnet1Subnet3D3E93FE"
            },
            {
              "Ref": "dataeduVPCs360privateSubnet2SubnetC1604F60"
            }
          ]
        }
      },
      "DependsOn": [
        "dataeduSISImportRoleDefaultPolicy7294368E",
        "dataeduSISImportRole61DAD9FC"
      ],
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduSISLambdaFunction/Resource"
      }
    },
    "dataeduSSMParam6F974C31": {
      "Type": "AWS::SSM::Parameter",
      "Properties": {
        "Type": "String",
        "Value": {
          "Fn::Join": [
            "",
            [
              "{\"base_url\":\"ee-assets-prod-",
              {
                "Ref": "AWS::Region"
              },
              ".s3.amazonaws.com/modules/f7ff818991a14cfb80e2617aad4431d1/v1/mockdata/lms_demo\",\"version\": \"v1\", \"current_date\": \"2014-08-18\", \"perform_initial_load\": \"1\",\"target_bucket\":\"",
              {
                "Ref": "dataeduRawBucket945ADDC3"
              },
              "\", \"base_s3_prefix\":\"lmsapi\"}"
            ]
          ]
        },
        "Description": "SSM Parameter for mock LMS integration.",
        "Name": "/dataedu/lms-demo/state"
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduSSMParam/Resource"
      }
    },
    "dataeduLMSS3FetchLambdaB561DBA8": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "ee-assets-prod-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "modules/f7ff818991a14cfb80e2617aad4431d1/v1/lambda/s360-fetch-s3-data.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "dataeduLMSS3FetchRole16948341",
            "Arn"
          ]
        },
        "Description": "Lambda function that fetches a file from a URL and stores it in a S3 bucket",
        "FunctionName": "dataedu-fetch-s3-data",
        "Handler": "lambda_handler.lambda_handler",
        "MemorySize": 256,
        "Runtime": "python3.7",
        "Timeout": 600
      },
      "DependsOn": [
        "dataeduLMSS3FetchRoleDefaultPolicyE0083EF5",
        "dataeduLMSS3FetchRole16948341"
      ],
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSS3FetchLambda/Resource"
      }
    },
    "dataeduLMSAPIFetchLambdaBD421AD7": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Fn::Join": [
              "",
              [
                "ee-assets-prod-",
                {
                  "Ref": "AWS::Region"
                }
              ]
            ]
          },
          "S3Key": "modules/f7ff818991a14cfb80e2617aad4431d1/v1/lambda/s360-fetch-lmsapi.zip"
        },
        "Role": {
          "Fn::GetAtt": [
            "dataeduLMSAPIFetchRoleE153F61C",
            "Arn"
          ]
        },
        "Description": "Lambda function that mimics invoking an API to obtain data from an SaaS app",
        "FunctionName": "dataedu-fetch-lmsapi",
        "Handler": "lambda_function.lambda_handler",
        "MemorySize": 256,
        "Runtime": "python3.7",
        "Timeout": 600
      },
      "DependsOn": [
        "dataeduLMSAPIFetchRoleDefaultPolicy716C3933",
        "dataeduLMSAPIFetchRoleE153F61C"
      ],
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduLMSAPIFetchLambda/Resource"
      }
    },
    "dataeduEventBridgeRuleF5498C76": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "Description": "Invokes demo API on a scheduled basis",
        "Name": "dataedu-lmsapi-sync-schedule-halfhourly",
        "ScheduleExpression": "rate(1 minute)",
        "State": "DISABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::GetAtt": [
                "dataeduLMSAPIFetchLambdaBD421AD7",
                "Arn"
              ]
            },
            "Id": "Target0"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduEventBridgeRule/Resource"
      }
    },
    "dataeduEventBridgeRuleAllowEventRuledataEDUstackEEdataeduLMSAPIFetchLambda7A54F1DB5834D1AF": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "dataeduLMSAPIFetchLambdaBD421AD7",
            "Arn"
          ]
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": {
          "Fn::GetAtt": [
            "dataeduEventBridgeRuleF5498C76",
            "Arn"
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/dataeduEventBridgeRule/AllowEventRuledataEDUstackEEdataeduLMSAPIFetchLambda7A54F1DB"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/31STU8CMRD9Ld5LFUm8AyohGrNZDFcz2x2xsm1JPyBks//dabuwiImneTN9nb6+mXs+4Xc3cHAjUW9Hjax4u/Igtmz+qQuwoNCjZSU6E6xARsSPVoLibWkajKQUC9NIcUx3EurYVjnevmCqxTBtJLiYJNAxN+HtLIgt+ljsUQ5Ds195TmbgsGMo7nm73olIWhdzVoSKOKtQ6dxvQKUJHt+hymJzfahNnTNCgpdGn8kRPC2LGN7AL8DjAY6ssHJPcGi81GQM4RMhK+mzqScPvxRqz1YogpX+uLAm7JKGfwtLvbHookEoLHqnQMMGLU0l5T0/ohzewW7QX7x3JlyfdMzWNJNH8FCRiUvtPGgaaf7SWc3j7E/hRO1YHacajcId+Z18u2JfnJxfiIbqemdkFNGAqmrg7Ssc0a7Rut77X/lz0OI0lEtcoFXSRQoZ5FTcVSv1ZljUy62lNdnTv0lxGfpdpdh1WWa/0ITnRtfSp57a1Mi/3e1+/MDHEz6++XZSjmzQXirkZY4/ntjiYjMDAAA="
      },
      "Metadata": {
        "aws:cdk:path": "dataEDUstackEE/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
}